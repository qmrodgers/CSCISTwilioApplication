// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TwilioWebApplication.Data;

#nullable disable

namespace TwilioWebApplication.Migrations
{
    [DbContext(typeof(WebApplicationContext))]
    partial class WebApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TwilioWebApplication.Models.CallLog", b =>
                {
                    b.Property<DateTime>("CallDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CallType")
                        .HasColumnType("int");

                    b.Property<string>("Caller")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<bool>("Favorite")
                        .HasColumnType("bit");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasIndex("EmployeeID");

                    b.ToTable("CallLogs");
                });

            modelBuilder.Entity("TwilioWebApplication.Models.Company", b =>
                {
                    b.Property<int>("CompanyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyID"), 1L, 1);

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TwilioSID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TwilioSecretKey")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompanyID");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("TwilioWebApplication.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeID"), 1L, 1);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchasedNumberID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("EmployeeID");

                    b.HasIndex("PurchasedNumberID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("TwilioWebApplication.Models.PurchasedNumber", b =>
                {
                    b.Property<string>("PurchasedNumberID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FriendlyNumberName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PurchasedNumberID");

                    b.ToTable("PurchasedNumbers");
                });

            modelBuilder.Entity("TwilioWebApplication.Models.User", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserName");

                    b.HasIndex("CompanyID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TwilioWebApplication.Models.CallLog", b =>
                {
                    b.HasOne("TwilioWebApplication.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("TwilioWebApplication.Models.Employee", b =>
                {
                    b.HasOne("TwilioWebApplication.Models.PurchasedNumber", "PurchasedNumber")
                        .WithMany()
                        .HasForeignKey("PurchasedNumberID");

                    b.Navigation("PurchasedNumber");
                });

            modelBuilder.Entity("TwilioWebApplication.Models.User", b =>
                {
                    b.HasOne("TwilioWebApplication.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });
#pragma warning restore 612, 618
        }
    }
}
